from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from pyrogram.errors import FloodWait, ChannelInvalid
from ChampuMusic import app
from ChampuMusic.utils.database import get_assistant
from ChampuMusic.plugins.link_command_handler import link_command_handler  # Import the function
import asyncio
import random

# Replace this with your actual log group chat ID
LOG_GROUP_ID = -1001423108989

async def send_log(message: str, channel_id: int = None, message_id: int = None):
    try:
        if channel_id and message_id:
            link = await link_command_handler(channel_id, message_id)  # Use the imported function
            button = InlineKeyboardMarkup([
                [InlineKeyboardButton("…¢·¥è ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ò·¥ès·¥õ", url=link)]
            ])
            await app.send_message(LOG_GROUP_ID, message, reply_markup=button)
        else:
            await app.send_message(LOG_GROUP_ID, message)
    except Exception as e:
        print(f"“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è s·¥á…¥·¥Ö  ü·¥è…¢ ·¥ç·¥áss·¥Ä…¢·¥á: {str(e)}")

async def retry_with_backoff(func, *args, max_retries=5, initial_delay=1, **kwargs):
    retries = 0
    while retries < max_retries:
        try:
            return await func(*args, **kwargs)
        except FloodWait as e:
            retries += 1
            delay = initial_delay * (2 ** retries) + random.uniform(0, 1)
            await send_log(f"“ì ü·¥è·¥è·¥Ö·¥°·¥Ä…™·¥õ ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ·¥á·¥Ö.  Ä·¥á·¥õ Ä è…™…¥…¢ …™…¥ {delay:.2f} s·¥á·¥Ñ·¥è…¥·¥Ös...")
            await asyncio.sleep(delay)
    raise Exception(f"“ì·¥Ä…™ ü·¥á·¥Ö ·¥Ä“ì·¥õ·¥á Ä {max_retries}  Ä·¥á·¥õ Ä…™·¥ás")

@app.on_message(filters.command("react"))
async def react_to_message(client, message: Message):
    if message.reply_to_message:
        try:
            emoji = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else 'üëç'
            
            assistant = await get_assistant(message.chat.id)
            if assistant:
                await retry_with_backoff(
                    assistant.send_reaction,
                    chat_id=message.chat.id,
                    message_id=message.reply_to_message.id,
                    emoji=emoji
                )
            else:
                await message.reply("·¥Äss…™s·¥õ·¥Ä…¥·¥õ …¥·¥è·¥õ ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á  ú·¥á Ä·¥á “ì·¥è Ä  Ä·¥á·¥Ä·¥Ñ·¥õ ·¥è…¥ ·¥ç·¥áss·¥Ä…¢·¥á.")
        except Exception as e:
            await message.reply(f"“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è s·¥á…¥·¥Ö  Ä·¥á·¥Ä·¥Ñ·¥õ…™·¥è…¥. ·¥á Ä Ä·¥è Ä: {str(e)}")
    else:
        await message.reply("·¥ò ü·¥á·¥Äs·¥á  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è  Ä·¥á·¥Ä·¥Ñ·¥õ ·¥õ·¥è …™·¥õ.")
@app.on_message(filters.channel)
async def auto_react_to_channel_post(client, message: Message):
    try:
        # Check if the bot is a member of the channel
        try:
            chat = await client.get_chat(message.chat.id)
            await send_log(f"·¥Ñ ú·¥Ä·¥õ …™…¥“ì·¥è: …™·¥Ö={chat.id}, ·¥õ è·¥ò·¥á={chat.type}, ·¥õ…™·¥õ ü·¥á={chat.title}")
            
            if chat.type not in ["channel", "supergroup"]:
                await send_log(f"…¥·¥è·¥õ ·¥Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü: {message.chat.id}")
                return
        except ChannelInvalid:
            await send_log(f"  ô·¥è·¥õ …™s …¥·¥è·¥õ ·¥Ä ·¥ç·¥á·¥ç ô·¥á Ä ·¥è“ì ·¥õ ú·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü: {message.chat.id}")
            return

        await retry_with_backoff(
            client.send_reaction,
            chat_id=message.chat.id,
            message_id=message.id,
            emoji='üëç'
        )
        
        assistant = await get_assistant(message.chat.id)
        if assistant:
            await retry_with_backoff(
                assistant.send_reaction,
                chat_id=message.chat.id,
                message_id=message.id,
                emoji='‚ù§Ô∏è'
            )
        
        await send_log(
            f" Ä·¥á·¥Ä·¥Ñ·¥õ·¥á·¥Ö ·¥õ·¥è ·¥ç·¥áss·¥Ä…¢·¥á {message.id} …™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü {message.chat.title}",
            channel_id=message.chat.id,
            message_id=message.id
        )
    except Exception as e:
        await send_log(
            f"“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è  Ä·¥á·¥Ä·¥Ñ·¥õ ·¥õ·¥è ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ò·¥ès·¥õ. ·¥á Ä Ä·¥è Ä: {str(e)}",
            channel_id=message.chat.id,
            message_id=message.id
        )